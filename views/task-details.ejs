<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Details - Dante Platform</title>
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Same neumorphism styles as above */
        :root {
            --primary-bg: #e8e8e8;
            --secondary-bg: #f0f0f0;
            --button-bg: #d8d8d8;
            --button-border: #d0d0d0;
            --text-primary: #2c2c2c;
            --text-secondary: #666666;
            --text-light: #ffffff;
            --accent-color: #4285f4;
            --border-color: #d0d0d0;
            --shadow-raised: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
            --shadow-pressed: inset 4px 4px 8px #c5c5c5, inset -4px -4px 8px #ffffff;
            --shadow-inset: inset 4px 4px 8px #c5c5c5, inset -4px -4px 8px #ffffff;
            --shadow-subtle: 2px 2px 4px #c5c5c5, -2px -2px 4px #ffffff;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        /* Copy all the same body, sidebar, navigation styles from above */
        body {
            background: var(--primary-bg);
            font-family: 'Source Sans Pro', sans-serif;
            margin: 0;
            padding: 0;
            color: var(--text-primary);
            min-height: 100vh;
        }

        .main-container { display: flex; min-height: 100vh; }
        .sidebar { width: 250px; background: var(--primary-bg); border-right: 1px solid var(--border-color); box-shadow: var(--shadow-inset); padding: 20px; flex-shrink: 0; }
        .main-content { flex: 1; padding: 20px; overflow-y: auto; }
        
        /* Add all other styles... */

        .status-badge {
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-pending { background: #fef3c7; color: #d97706; }
        .status-in_progress { background: #dbeafe; color: #2563eb; }
        .status-completed { background: #d1fae5; color: #065f46; }

        .task-meta {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 16px;
            margin-bottom: 20px;
        }

        .meta-item {
            background: var(--secondary-bg);
            padding: 16px;
            border-radius: 10px;
            box-shadow: var(--shadow-subtle);
        }

        .meta-label {
            font-size: 12px;
            color: var(--text-secondary);
            font-weight: 600;
            text-transform: uppercase;
            margin-bottom: 4px;
        }

        .meta-value {
            font-size: 14px;
            font-weight: 500;
            color: var(--text-primary);
        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Same sidebar as above -->
        <aside class="sidebar">
            <!-- Copy sidebar content from create-task.ejs -->
        </aside>

        <main class="main-content">
            <div class="page-header">
                <h1 class="page-title"><%= task.title %></h1>
                <a href="/tasks" class="btn btn-secondary">‚Üê Back to Tasks</a>
            </div>

            <!-- Task Status and Meta -->
            <div class="task-meta">
                <div class="meta-item">
                    <div class="meta-label">Status</div>
                    <div class="meta-value">
                        <span class="status-badge status-<%= task.status %>"><%= task.status.replace('_', ' ') %></span>
                    </div>
                </div>
                <div class="meta-item">
                    <div class="meta-label">Created By</div>
                    <div class="meta-value"><%= task.created_by_profile?.full_name || 'Unknown' %></div>
                </div>
                <div class="meta-item">
                    <div class="meta-label">Assigned To</div>
                    <div class="meta-value"><%= task.assigned_to_profile?.full_name || 'Unassigned' %></div>
                </div>
                <% if (task.due_date) { %>
                <div class="meta-item">
                    <div class="meta-label">Due Date</div>
                    <div class="meta-value"><%= moment(task.due_date).format('MMMM DD, YYYY') %></div>
                </div>
                <% } %>
            </div>

            <!-- Task Description -->
            <% if (task.description) { %>
            <div class="card">
                <h3 class="card-title">Description</h3>
                <p style="line-height: 1.6; margin: 0;"><%= task.description %></p>
            </div>
            <% } %>

            <!-- Actions -->
            <div class="card">
                <h3 class="card-title">Actions</h3>
                <div style="display: flex; gap: 12px; flex-wrap: wrap;">
                    <% if (task.status !== 'completed') { %>
                    <button onclick="markCompleted('<%= task.id %>')" class="btn btn-primary">
                        Mark as Completed
                    </button>
                    <% } %>
                    <button onclick="editTask()" class="btn">Edit Task</button>
                </div>
            </div>
        </main>
    </div>

    <script>
        async function markCompleted(taskId) {
            if (!confirm('Mark this task as completed?')) return;
            
            try {
                const response = await fetch(`/tasks/${taskId}/complete`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('Task completed successfully!');
                    location.reload();
                } else {
                    alert('Failed to complete task');
                }
            } catch (error) {
                alert('Failed to complete task');
            }
        }

        function editTask() {
            alert('Edit functionality coming soon!');
        }
    </script>
</body>
</html>