<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Events - Dante Platform</title>
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-bg: #e8e8e8;
            --secondary-bg: #f0f0f0;
            --button-bg: #d8d8d8;
            --button-border: #d0d0d0;
            --text-primary: #2c2c2c;
            --text-secondary: #666666;
            --text-light: #ffffff;
            --accent-color: #4285f4;
            --border-color: #d0d0d0;
            --shadow-raised: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
            --shadow-pressed: inset 4px 4px 8px #c5c5c5, inset -4px -4px 8px #ffffff;
            --shadow-inset: inset 4px 4px 8px #c5c5c5, inset -4px -4px 8px #ffffff;
            --shadow-subtle: 2px 2px 4px #c5c5c5, -2px -2px 4px #ffffff;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        body {
            background: var(--primary-bg);
            font-family: 'Source Sans Pro', sans-serif;
            margin: 0;
            padding: 0;
            color: var(--text-primary);
            min-height: 100vh;
        }

        .main-container {
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
            width: 250px;
            background: var(--primary-bg);
            border-right: 1px solid var(--border-color);
            box-shadow: var(--shadow-inset);
            padding: 20px;
            flex-shrink: 0;
        }

        .main-content {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
        }

        .dante-logo {
            text-align: center;
            margin-bottom: 30px;
        }

        .dante-logo h1 {
            font-size: 28px;
            font-weight: 700;
            color: var(--text-primary);
            margin: 0;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
        }

        .nav-menu {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .nav-item {
            margin-bottom: 8px;
        }

        .nav-link {
            display: block;
            padding: 12px 16px;
            color: var(--text-primary);
            text-decoration: none;
            border-radius: 10px;
            background: var(--primary-bg);
            border: 1px solid var(--primary-bg);
            box-shadow: var(--shadow-raised);
            transition: var(--transition);
            font-weight: 500;
        }

        .nav-link:hover {
            transform: translateY(-1px);
            box-shadow: 8px 8px 16px #c5c5c5, -8px -8px 16px #ffffff;
        }

        .nav-link.active {
            background: var(--accent-color);
            color: var(--text-light);
            box-shadow: var(--shadow-pressed);
        }

        .user-info {
            margin-top: 30px;
            padding: 16px;
            background: var(--secondary-bg);
            border-radius: 12px;
            box-shadow: var(--shadow-inset);
            text-align: center;
        }

        .user-name {
            font-weight: 600;
            margin-bottom: 4px;
        }

        .user-role {
            font-size: 12px;
            color: var(--text-secondary);
            margin-bottom: 12px;
            text-transform: uppercase;
            font-weight: 600;
        }

        .logout-btn {
            background: var(--button-bg);
            border: 1px solid var(--button-border);
            color: var(--text-primary);
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 500;
            box-shadow: var(--shadow-raised);
            transition: var(--transition);
        }

        .logout-btn:hover {
            transform: translateY(-1px);
            box-shadow: 4px 4px 8px #c5c5c5, -4px -4px 8px #ffffff;
        }

        .page-header {
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .page-title {
            font-size: 32px;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0;
        }

        .card {
            background: var(--primary-bg);
            border: 1px solid var(--border-color);
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: var(--shadow-raised);
        }

        .btn {
            background: var(--button-bg);
            border: 1px solid var(--button-border);
            color: var(--text-primary);
            padding: 10px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            display: inline-block;
            box-shadow: var(--shadow-raised);
            transition: var(--transition);
            text-align: center;
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
        }

        .btn-primary {
            background: var(--accent-color);
            color: var(--text-light);
            border-color: var(--accent-color);
        }

        .btn-secondary {
            background: #10b981;
            color: var(--text-light);
            border-color: #10b981;
        }

        .events-grid {
            display: grid;
            gap: 1.5rem;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        }

        .event-card {
            background: var(--secondary-bg);
            border-radius: 12px;
            padding: 20px;
            box-shadow: var(--shadow-subtle);
            border: 1px solid var(--border-color);
            transition: var(--transition);
        }

        .event-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-raised);
        }

        .event-title {
            font-size: 18px;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0 0 12px 0;
        }

        .event-meta {
            font-size: 14px;
            color: var(--text-secondary);
            margin-bottom: 8px;
        }

        .event-description {
            color: var(--text-primary);
            margin-bottom: 16px;
            line-height: 1.5;
        }

        .event-actions {
            display: flex;
            gap: 8px;
        }

        .event-btn {
            background: var(--button-bg);
            border: 1px solid var(--button-border);
            color: var(--text-primary);
            padding: 6px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            transition: var(--transition);
        }

        .event-btn:hover {
            transform: translateY(-1px);
        }

        .event-btn.danger {
            background: #ef4444;
            color: var(--text-light);
            border-color: #ef4444;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pending { background: #fef3c7; color: #d97706; }
        .status-approved { background: #d1fae5; color: #065f46; }
        .status-denied { background: #fee2e2; color: #dc2626; }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: var(--text-secondary);
        }

        /* Modal styles from your original file */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .modal.show {
            opacity: 1;
            visibility: visible;
        }

        .modal-content {
            background: var(--primary-bg);
            border-radius: 16px;
            padding: 2rem;
            max-width: 500px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: var(--shadow-raised);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .modal-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0;
        }

        .close-btn {
            background: var(--button-bg);
            border: 1px solid var(--button-border);
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: var(--shadow-raised);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--text-primary);
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background: var(--primary-bg);
            color: var(--text-primary);
            font-size: 1rem;
            box-shadow: var(--shadow-inset);
            transition: var(--transition);
            box-sizing: border-box;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent-color);
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
        }

        @media (max-width: 768px) {
            .main-container { flex-direction: column; }
            .sidebar { width: 100%; }
            .events-grid { grid-template-columns: 1fr; }
            .form-row { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="dante-logo">
                <h1>DANTE</h1>
                <p style="font-size: 12px; color: var(--text-secondary); margin: 0;">Team Platform</p>
            </div>
            
            <nav>
                <ul class="nav-menu">
                    <li class="nav-item">
                        <a href="/dashboard" class="nav-link <%= title === 'Dashboard' ? 'active' : '' %>">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a href="/tasks" class="nav-link <%= title && title.includes('Task') ? 'active' : '' %>">Tasks</a>
                    </li>
                    <li class="nav-item">
                        <a href="/tasks/my-routine" class="nav-link <%= title && title.includes('Routine') ? 'active' : '' %>">My Routine</a>
                    </li>
                    <li class="nav-item">
                        <a href="/tasks/team-routines" class="nav-link <%= title === 'Team Routines' ? 'active' : '' %>">Team Routines</a>
                    </li>
                    <li class="nav-item">
                        <a href="/schedule" class="nav-link <%= title && title.includes('Schedule') ? 'active' : '' %>">Schedule</a>
                    </li>
                    <li class="nav-item">
                        <a href="/schedule/my-events" class="nav-link <%= title === 'My Events' ? 'active' : '' %>">My Events</a>
                    </li>
                    <% if (typeof profile !== 'undefined' && profile && profile.role === 'admin') { %>
                    <li class="nav-item">
                        <a href="/admin" class="nav-link <%= title && title.includes('Admin') ? 'active' : '' %>">Admin Panel</a>
                    </li>
                    <% } %>
                </ul>
            </nav>

            <div class="user-info">
                <div class="user-name"><%= typeof profile !== 'undefined' && profile ? profile.full_name : 'User' %></div>
                <div class="user-role"><%= typeof profile !== 'undefined' && profile ? profile.role : 'member' %></div>
                <form action="/auth/logout" method="POST" style="margin: 0;">
                    <button type="submit" class="logout-btn">Logout</button>
                </form>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <div class="page-header">
                <h1 class="page-title">My Personal Events</h1>
                <div>
                    <button class="btn btn-primary" onclick="showCreateModal()">Add New Event</button>
                    <a href="/schedule" class="btn btn-secondary">Back to Schedule</a>
                </div>
            </div>

            <!-- Events Grid -->
            <div class="card">
                <div class="events-grid" id="eventsData" data-events='<%- JSON.stringify(events) %>'>
                    <% if (events.length === 0) { %>
                        <div class="empty-state" style="grid-column: 1 / -1;">
                            <h3>No events yet</h3>
                            <p>You haven't created any personal events. Click "Add New Event" to get started.</p>
                        </div>
                    <% } else { %>
                        <% events.forEach(event => { %>
                            <div class="event-card">
                                <div class="event-title"><%= event.title %></div>
                                
                                <div class="event-meta">
                                    <span class="status-badge status-<%= event.status %>"><%= event.status.toUpperCase() %></span>
                                    <% if (event.start_date === event.end_date) { %>
                                        <%= moment(event.start_date).format('DD MMMM YYYY') %>
                                    <% } else { %>
                                        <%= moment(event.start_date).format('DD MMM') %> - <%= moment(event.end_date).format('DD MMM YYYY') %>
                                    <% } %>
                                </div>
                                
                                <% if (!event.is_all_day && event.start_time) { %>
                                <div class="event-meta">
                                    <%= event.start_time %> - <%= event.end_time || 'End time not set' %>
                                </div>
                                <% } else { %>
                                <div class="event-meta">All Day</div>
                                <% } %>
                                
                                <% if (event.description) { %>
                                <div class="event-description">
                                    <%= event.description %>
                                </div>
                                <% } %>
                                
                                <div class="event-actions">
                                    <button class="event-btn" data-event-id="<%= event.id %>" onclick="editEvent(this.dataset.eventId)">
                                        Edit
                                    </button>
                                    <button class="event-btn danger" data-event-id="<%= event.id %>" onclick="deleteEvent(this.dataset.eventId)">
                                        Delete
                                    </button>
                                </div>
                            </div>
                        <% }) %>
                    <% } %>
                </div>
            </div>
        </main>
    </div>

    <!-- Event Modal (keeping your original modal code) -->
    <div id="eventModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Add New Event</h2>
                <button class="close-btn" onclick="closeModal()">&times;</button>
            </div>
            
            <form id="eventForm">
                <input type="hidden" id="eventId">
                
                <div class="form-group">
                    <label class="form-label" for="title">Event Title *</label>
                    <input type="text" id="title" name="title" class="form-control" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="eventType">Event Type *</label>
                    <select id="eventType" name="eventType" class="form-control" required>
                        <option value="">Select type...</option>
                        <option value="vacation">Vacation</option>
                        <option value="sick_leave">Sick Leave</option>
                        <option value="appointment">Appointment</option>
                        <option value="personal">Personal</option>
                        <option value="training">Training</option>
                    </select>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="startDate">Start Date *</label>
                        <input type="date" id="startDate" name="startDate" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="endDate">End Date *</label>
                        <input type="date" id="endDate" name="endDate" class="form-control" required>
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="checkbox-group">
                        <input type="checkbox" id="isAllDay" name="isAllDay" checked onchange="toggleTimeFields()">
                        <label class="form-label" for="isAllDay">All Day Event</label>
                    </div>
                </div>
                
                <div id="timeFields" style="display: none;">
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label" for="startTime">Start Time</label>
                            <input type="time" id="startTime" name="startTime" class="form-control">
                        </div>
                        <div class="form-group">
                            <label class="form-label" for="endTime">End Time</label>
                            <input type="time" id="endTime" name="endTime" class="form-control">
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="description">Description</label>
                    <textarea id="description" name="description" class="form-control" rows="3" 
                              placeholder="Optional details about the event..."></textarea>
                </div>
                
                <div class="modal-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        Create Event
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Your original JavaScript code remains the same
        const eventsContainer = document.getElementById('eventsData');
        let eventsData = [];
        
        try {
            eventsData = JSON.parse(eventsContainer.dataset.events);
            console.log('Events loaded:', eventsData); // Debug log
        } catch (error) {
            console.error('Error parsing events data:', error);
            eventsData = [];
        }

        let editingEventId = null;

        function showCreateModal() {
            editingEventId = null;
            document.getElementById('modalTitle').textContent = 'Add New Event';
            document.getElementById('submitBtn').textContent = 'Create Event';
            document.getElementById('eventForm').reset();
            document.getElementById('eventId').value = '';
            
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('startDate').value = today;
            document.getElementById('endDate').value = today;
            
            toggleTimeFields();
            showModal();
        }

        function editEvent(eventId) {
            const event = eventsData.find(e => e.id === eventId);
            if (!event) return;
            
            editingEventId = eventId;
            document.getElementById('modalTitle').textContent = 'Edit Event';
            document.getElementById('submitBtn').textContent = 'Update Event';
            
            document.getElementById('eventId').value = event.id;
            document.getElementById('title').value = event.title;
            document.getElementById('eventType').value = event.event_type;
            document.getElementById('startDate').value = event.start_date;
            document.getElementById('endDate').value = event.end_date;
            document.getElementById('isAllDay').checked = event.is_all_day;
            document.getElementById('startTime').value = event.start_time || '';
            document.getElementById('endTime').value = event.end_time || '';
            document.getElementById('description').value = event.description || '';
            
            toggleTimeFields();
            showModal();
        }

        async function deleteEvent(eventId) {
            if (!confirm('Are you sure you want to delete this event?')) return;
            
            try {
                const response = await fetch(`/schedule/events/${eventId}`, {
                    method: 'DELETE'
                });
                
                const data = await response.json();
                
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            } catch (error) {
                console.error('Error deleting event:', error);
                alert('Error deleting event');
            }
        }

        function showModal() {
            document.getElementById('eventModal').classList.add('show');
        }

        function closeModal() {
            document.getElementById('eventModal').classList.remove('show');
        }

        function toggleTimeFields() {
            const isAllDay = document.getElementById('isAllDay').checked;
            const timeFields = document.getElementById('timeFields');
            timeFields.style.display = isAllDay ? 'none' : 'block';
            
            if (isAllDay) {
                document.getElementById('startTime').value = '';
                document.getElementById('endTime').value = '';
            }
        }

        document.getElementById('eventForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const eventData = {
                title: formData.get('title'),
                eventType: formData.get('eventType'),
                startDate: formData.get('startDate'),
                endDate: formData.get('endDate'),
                isAllDay: formData.get('isAllDay') === 'on',
                startTime: formData.get('startTime'),
                endTime: formData.get('endTime'),
                description: formData.get('description')
            };
            
            if (!eventData.title || !eventData.eventType || !eventData.startDate || !eventData.endDate) {
                alert('Please fill in all required fields');
                return;
            }
            
            if (eventData.startDate > eventData.endDate) {
                alert('End date cannot be before start date');
                return;
            }
            
            try {
                const url = editingEventId ? `/schedule/events/${editingEventId}` : '/schedule/events';
                const method = editingEventId ? 'PUT' : 'POST';
                
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(eventData)
                });
                
                const data = await response.json();
                
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            } catch (error) {
                console.error('Error saving event:', error);
                alert('Error saving event');
            }
        });

        document.getElementById('eventModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });
    </script>
</body>
</html>